/*------ Arduino Line Follower Code----- */
/*......G.G.K.N.MADHUBHASHINI....AA1396...*/
/*-------Test code without PID------*/
/*-------definning------*/
#define LM1 A4      // left motor
#define LM2 A3      // left motor
#define RM1 A2     // right motor
#define RM2 A1      // right motor
#define ENA 6      // enable pin of the left motor 
#define ENB 5      // enable pin of the right motor

//IR Sensors
//int white = A5 ;  //sensor1(very left corner sensor)
int gray =13;    //sensor2
int purple = 12 ;  //sensor3
int blue = 11 ;    //sensor4
int green =9 ;    //sensor5
int yellow = 8 ;  //sensor6
int orange = 7;  //sensor7
//int red = 7 ;     //sensor8(very right corner sensor)
 
 //int S1 = 0;
 int S2 = 0;
 int S3 = 0;
 int S4 = 0;
 int S5 = 0;
 int S6 = 0;
 int S7 = 0;
 //int S8 = 0;

 //Busser
 const int buzzer = A0; //buzzer to arduino pin A0
 
 //junctions detection
int count_X_junction=0;
int X[1]={0};
int count_Rightsidejunction=0;
int Rightside[1]={0};

void setup() {
  
//pinMode(white,INPUT);//
pinMode(gray,INPUT);//
pinMode(purple,INPUT);//
pinMode(blue,INPUT);//
pinMode(green,INPUT);//
pinMode(yellow,INPUT);//
pinMode(orange,INPUT);//
//pinMode(red,INPUT);// 

pinMode(LM1,OUTPUT);
pinMode(LM2,OUTPUT); 
pinMode(RM1,OUTPUT);
pinMode(LM2,OUTPUT);
pinMode(ENA,OUTPUT);
pinMode(ENB,OUTPUT);

pinMode(buzzer, OUTPUT); // Set buzzer - pin A0 as an output

  Serial.begin(9600);
  delay(1000);
  busser_spePoints();
  Serial.println("Started !!");
  delay(1000);


}


void loop() {
  
  
  // read_sensor_values();

  // S1 = digitalRead(white);
  int WS2 = digitalRead(gray);
    if(WS2== 1){
        S2=0
    } else{S2=1}
    
  int WS3 = digitalRead(purple);
 int WS4 = digitalRead(blue);
  int WS5 = digitalRead(green);
 int  WS6 = digitalRead(yellow);
  int WS7 = digitalRead(orange);
 // S8 = digitalRead(red);
   
  //delay(100);
 // Serial.print("\t");
   // Serial.print(S1);
    Serial.print("\t");
    Serial.print(S2); 
    Serial.print("\t");
    Serial.print(S3);
    Serial.print("\t");
    Serial.print(S4);
    Serial.print("\t");
    Serial.print(S5);
    Serial.print("\t");
    Serial.print(S6);
    Serial.print("\t");
    Serial.print(S7);
    //Serial.print("\t");
  //  Serial.println(S8);

    if(((S2==1)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1))||      //=========================================================================(1)
       ((S2==1)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==1))){
         count_X_junctions();
        // delay(10);
      /*  if((S2==0)&&(S3==0)&&(S4==0)&&(S5==0)&&(S6==0)&&(S7==0)){
          backward();
          delay(20);
        }*/
  }
  //Turn right----------------------------------------------------------------------------------------------------------Turn Right(Sharp) =>
 else if(((S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1))||  //=============================================================================(2)
          ((S2==0)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==1))||
         ((S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1))){
           //stop_robot();
           //delay(20);
           count_Right_junctions(); 
          // delay(530);
         // read_sensor_values();
          
      /* if(((S2==0)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==0)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==1)&&(S3==1)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==1)&&(S3==1)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1))){
          sharpRightTurn();
          Serial.println("  ");
          Serial.print("sharpRightTurn:");
          Serial.println("  "); 
              
           delay(75);
           read_sensor_values();
           
        if(((S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1))||
         ((S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==0))||
         ((S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0))){
          
           sharpRightTurn();
           Serial.println("  ");
           Serial.print("sharpRightTurn:");
           Serial.println("  "); 
    
           delay(75);
         }
     }*/
  }    
 /* else if(((S1==0)&&(S2==0)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==1))||
         ((S1==0)&&(S2==0)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==1))||
         ((S1==0)&&(S2==1)&&(S3==1)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==1))||
         ((S1==0)&&(S2==1)&&(S3==1)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==0))||
         ((S1==1)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==1))||
         ((S1==1)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==0))){
          
           sharpRightTurn(); 
           delay(100);
         }
  else if(((S1==0)&&(S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==0))||
         ((S1==0)&&(S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==1)&&(S8==1))||
         ((S1==0)&&(S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==0)&&(S8==0))||
         ((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0)&&(S8==0))){
          
           sharpRightTurn(); 
           delay(100);
         } */
  //----------------------------------------------------------------------------------------------------------------------------- 
      
                     
  else if(//((S2==0)&&(S3==0)&&(S4==1)&&(S5==0)&&(S6==0)&&(S7==0))||      //=============================================================================(3)
          (S2==0)&&(S3==1)&&(S4==1)&&(S5==0)&&(S6==0)&&(S7==0)){
            //do{
             // read_sensor_values();
             //sharpLeftTurn();
              TurnLeft();
           Serial.println("  ");
           Serial.print(" sharpLeftTurn:");
           Serial.println("  ");
              delay(10);
              
           /* }while(((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0)&&(S8==0))||
                   ((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0)&&(S8==1))||
                   ((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0)&&(S8==1))||
                   ((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0)&&(S8==1)));*/
         }
  else if(((S2==1)&&(S3==0)&&(S4==0)&&(S5==0)&&(S6==0)&&(S7==0))||
          ((S2==1)&&(S3==1)&&(S4==0)&&(S5==0)&&(S6==0)&&(S7==0))||      //=============================================================================(4)
          ((S2==0)&&(S3==1)&&(S4==0)&&(S5==0)&&(S6==0)&&(S7==0))){  
           // sharpLeftTurn();
            TurnLeft();
           
           Serial.println("  ");
           Serial.print(" sharpLeftTurn:");
           Serial.println("  "); 
            delay(15);   
          }
 else if(((S2==1)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0))||       //=============================================================================(5)
         ((S2==0)&&(S3==1)&&(S4==0)&&(S5==0)&&(S6==0)&&(S7==1))){     
           //sharpLeftTurn();
            TurnLeft();
           
           Serial.println("  ");
           Serial.print(" sharpLeftTurn:");
           Serial.println("  "); 
            delay(10); 
  }
            
          
 else if(//((S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==0)&&(S7==0))||    //=============================================================================(6)
         (S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==1)&&(S7==0)){
            //do{
              //read_sensor_values();
             // sharpRightTurn();
              TurnRight();
              
              
               Serial.println("  ");
               Serial.print("sharpRightTurn:");
               Serial.println("  "); 
               delay(10);
            /*}while(((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0)&&(S8==0))||
                   ((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0)&&(S8==1))||
                   ((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0)&&(S8==1))||
                   ((S1==0)&&(S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0)&&(S8==1)));*/
         }
                  
 else if(((S2==0)&&(S3==0)&&(S4==0)&&(S5==0)&&(S6==1)&&(S7==1))||     //=============================================================================(7)
         ((S2==0)&&(S3==0)&&(S4==0)&&(S5==0)&&(S6==1)&&(S7==0))||
         ((S2==0)&&(S3==0)&&(S4==0)&&(S5==0)&&(S6==0)&&(S7==1))){
          //sharpRightTurn();
          TurnRight();
           
            Serial.println("  ");
           Serial.print("sharpRightTurn:");
           Serial.println("  ");
           delay(10);  
           //stop_robot();
           //delay(10);            
         }
 
  
  else if(((S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0))||       //=============================================================================(8)
          ((S2==0)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0))||
          ((S2==0)&&(S3==0)&&(S4==0)&&(S5==1)&&(S6==0)&&(S7==0))||
          ((S2==0)&&(S3==0)&&(S4==1)&&(S5==0)&&(S6==0)&&(S7==0))||
          ((S2==0)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==1)&&(S7==0))){     
        forward();
        Serial.println("  ");
        Serial.print("forward :");
        Serial.println("  ");
        delay(10);
  }
  else if(((S2==1)&&(S3==1)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0))||       ////=============================================================================(9)
          ((S2==1)&&(S3==0)&&(S4==1)&&(S5==1)&&(S6==0)&&(S7==0))){     
        forward();
        
        Serial.println("  ");
        Serial.print("forward :");
        Serial.println("  ");
        delay(10);
  }
  

 else if((S2==0)&&(S3==0)&&(S4==0)&&(S5==0)&&(S6==0)&&(S7==0)){        //=============================================================================(10)
   int Bcount=(X[0]);
   if (Bcount<16){
    backward();
    delay(30);
   }
   //else{
  stop_robot();
  Serial.println("  ");
  Serial.print("stop_robot:");
  Serial.println("  ");
  delay(20);
  // }
 }
 else{
  stop_robot();
  Serial.println("  ");
  Serial.print("else:");
  Serial.println("  ");
 
  }
 
}
/*void read_sensor_values(){

 // S1 = digitalRead(white);
  S2 = digitalRead(gray);
  S3 = digitalRead(purple);
  S4 = digitalRead(blue);
  S5 = digitalRead(green);
  S6 = digitalRead(yellow);
  S7 = digitalRead(orange);
 // S8 = digitalRead(red);
   
  //delay(100);
 // Serial.print("\t");
   // Serial.print(S1);
    Serial.print("\t");
    Serial.print(S2); 
    Serial.print("\t");
    Serial.print(S3);
    Serial.print("\t");
    Serial.print(S4);
    Serial.print("\t");
    Serial.print(S5);
    Serial.print("\t");
    Serial.print(S6);
    Serial.print("\t");
    Serial.print(S7);
    //Serial.print("\t");
  //  Serial.println(S8);
    }
*/
//----------------------------------------------------------------------------------------
void count_X_junctions(){
  int i=0;
  while(i<16){
    int count=(X[0]);       //storing the X junctions
    count++;
    X[0]=count;


  Serial.println("  ");
  Serial.print("count X_Junctions :");
  Serial.print(count);
  Serial.println("  ");

// int Start_X_countings=(Rightside[0]);     //counting the met left sid junctions before the X junctions
    

   
  // if(Start_X_countings=0){
    
   
        if((count==1)||(count==3)||(count==7)||(count==9)||(count==11)||(count==12)||(count==14)){
            forward();
            busser_otherJunctions();
            delay(10);
           Serial.println("  ");
           Serial.print("forward :");
           Serial.println("  ");
            
        }
       else if((count==4)||(count==8)){ //***********
            forward();
            busser_spePoints();
           delay(10);
           Serial.println("  ");
           Serial.print("forward :");
           Serial.println("  ");
  
        }
       else if(count==13){
           sharpLeftTurn();
           busser_otherJunctions();
          delay(475);
           Serial.println("  ");
           Serial.print("sharpLeftTurn:");
           Serial.println("  ");
       }  
      else if((count==2)||(count==10)){//*************
            sharpLeftTurn();
            busser_spePoints();
           delay(520);
           Serial.println("  ");
           Serial.print("sharpLeftTurn:");
           Serial.println("  "); 
       }     
     else if(count==5){
           sharpRightTurn();
           busser_otherJunctions();
           delay(500);
           Serial.println("  ");
           Serial.print("sharpRightTurn:");
           Serial.println("  ");
       } 
     else if(count==6){  //****************
           sharpRightTurn();
           busser_spePoints();
           delay(520);
           Serial.println("  ");
           Serial.print("sharpRightTurn :");
           Serial.println("  ");
       } 
     else if(count==15){
           stop_robot();
           busser_spePoints();
         //  delay(500);
           Serial.println("  ");
           Serial.print("stop_robot :");
           Serial.println("  ");
       }
     else{
      stop_robot();
      //delay(100);
      }
  
  break;  
   }
 // }
 }
//-----------------------------------------------------------------
 void count_Right_junctions(){
  int j=0;
  while(j<7){
    int count=(Rightside[0]);
    count++;
    Rightside[0]=count;

  Serial.println("  ");
  Serial.print("count RightSideJunctions :");
  Serial.print(count);
  Serial.println("  ");

    

  if(count==1){
      forward();
   // sharpRightTurn();
    busser_otherJunctions();
    
           Serial.println("  ");
           Serial.print("forward :");
           Serial.println("  ");
           delay(20);
    }
   else if(count==2){ 
    sharpRightTurn();
    busser_otherJunctions();
    
           Serial.println("  ");
           Serial.print("sharpRightTurn:");
           Serial.println("  ");
           delay(510);
   }
  else if(count>2){ 
    delay(10);
   TurnRight();
    delay(10);
    }
 else{ 
  delay(50);  
 }
  
  break; 
  }  
}

    
//mge Right motor eke speed eka wadi------ :(
void forward()
{
  delay(20);
  digitalWrite(LM1, HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,61);//l
  analogWrite(ENB,58);//r
 //delay(20);
}

void sharpRightTurn() {   //Left Wheel speed >>>>> Right wheel speed   
  
 digitalWrite(LM1,  HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,60);//l
  analogWrite(ENB,0);//r
}

  
void TurnRight(){      //Left Wheel speed > Right wheel speed
  delay(10);
  digitalWrite(LM1,  HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,55);
  analogWrite(ENB,0);
  //delay(20);
}

void sharpLeftTurn() { //Left Wheel speed <<<<< Right wheel speed 
  
   digitalWrite(LM1,  HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,0);
  analogWrite(ENB,58);
}


void TurnLeft(){       //Left Wheel speed < Right wheel speed
 delay(10);
  digitalWrite(LM1, HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,0);
  analogWrite(ENB,55);
  delay(20);
}
void backward()
{
  delay(10);
  digitalWrite(LM1, LOW);
  digitalWrite(LM2, HIGH);
  digitalWrite(RM1, LOW);
  digitalWrite(RM2, HIGH);
  analogWrite(ENA,61);//l
  analogWrite(ENB,58);//r
   delay(20);
}  
 
void stop_robot()
{
  
  digitalWrite(LM1, LOW);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, LOW);
  digitalWrite(RM2, LOW);
} 
void busser_spePoints(){
   tone(buzzer, 800); // Send 0.6KHz sound signal...
  delay(1000);        // ...for 10800 mS
  noTone(buzzer);     // Stop sound...
 delay(1000);        // ...for 1000 mS 
}
void busser_otherJunctions(){
   tone(buzzer, 30); // Send 0.03KHz sound signal...
  delay(200);        // ...for 500 mS
  noTone(buzzer);     // Stop sound...
 delay(200);        // ...for 500 mS 
}





/*void sharpRightTurn() {   //Left Wheel speed >>>>> Right wheel speed   
  
  digitalWrite(LM1,  HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1,LOW );
  digitalWrite(RM2,HIGH);
  analogWrite(ENA,60);//l
  analogWrite(ENB,35);//r
}

  
void TurnRight(){      //Left Wheel speed > Right wheel speed
  digitalWrite(LM1,  HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,54);
  analogWrite(ENB,0);
}

void sharpLeftTurn() { //Left Wheel speed <<<<< Right wheel speed 
  
  digitalWrite(LM1,LOW );
  digitalWrite(LM2,HIGH );
  digitalWrite(RM1,  HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,37);
  analogWrite(ENB,58);
}


void TurnLeft(){       //Left Wheel speed < Right wheel speed
  digitalWrite(LM1, HIGH);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, HIGH);
  digitalWrite(RM2, LOW);
  analogWrite(ENA,0);
  analogWrite(ENB,54);
}
void backward()
{
  
  digitalWrite(LM1, LOW);
  digitalWrite(LM2, HIGH);
  digitalWrite(RM1, LOW);
  digitalWrite(RM2, HIGH);
  analogWrite(ENA,58);//l
  analogWrite(ENB,55);//r
} 
void stop_robot()
{
  
  digitalWrite(LM1, LOW);
  digitalWrite(LM2, LOW);
  digitalWrite(RM1, LOW);
  digitalWrite(RM2, LOW);
} 
*/
